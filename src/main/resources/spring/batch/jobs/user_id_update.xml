
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-4.0.xsd">



	<!-- Using properties file to replace properties in xml configuration file -->
	<bean id="jobProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:/opt/yellowpages-data/googleapi.properties" />
	</bean>		


	<batch:job id="userIdUpdateJob">	
		<!-- Decision tasklet to decide what store index to start at -->

	    <batch:step id="partitionStep" next="generateMasterSitemapStep">
			<batch:partition step="userIdUpdateStep" partitioner="rangePartitioner">
				<batch:handler grid-size="${grid.size}" task-executor="taskExecutor" />
			</batch:partition>
	    </batch:step>

	</batch:job>


	<batch:step id="userIdUpdateStep">
		<batch:tasklet>
			<batch:chunk reader="userItemReader" processor="userIdItemProcessor" writer="userIdUpdateItemWriter" commit-interval="${commit.interval}" >    		
    		</batch:chunk>

		    <batch:listeners>
				<batch:listener ref="cronStepListener" />
				<batch:listener ref="cronWriteListener" />
		    </batch:listeners>			
			
		</batch:tasklet>
	</batch:step>	
	


	<!-- Load it all into memory  -->
	<bean id="userItemReader" class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean
				class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="selectClause" value="select id, business_id" />
				<property name="fromClause" value="from users" />
				<property name="whereClause" value="where id &gt;= :fromId and id &lt;= :toId" />
				<property name="sortKey" value="id" />
			</bean>
		</property>
		<!-- Inject via the ExecutionContext in rangePartitioner -->
		<property name="parameterValues">
			<map>
				<entry key="fromId" value="#{stepExecutionContext[fromId]}" />
				<entry key="toId" value="#{stepExecutionContext[toId]}" />
			</map>
		</property>
		<property name="pageSize" value="1000" />
		<property name="rowMapper">
			<bean class="com.api.cron.batch.mapper.UsersMapper" />
		</property>
	</bean>
	
	


  <bean id="userIdUpdateItemWriter"
	class="org.springframework.batch.item.database.JdbcBatchItemWriter">
	<property name="dataSource" ref="dataSource" />
	<property name="sql">
	  <value>
            <![CDATA[       
            	UPDATE users SET `business_id` = :businessId WHERE `id` = :id; 
            ]]>
	  </value>
	</property>
	<!-- It will take care matching between object property and sql name parameter -->
	<property name="itemSqlParameterSourceProvider">
		<bean
		class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
	</property>
  </bean>


</beans>
